<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello"><!-- 보통 DB 별로 설정 -->
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!-- 쿼리를 모아서 한방에 DB에 업데이트 -->
            <property name="hibernate.jdbc.batch_size" value="10"/>
            <!--
                create : 기존 Table Drop 이후 Table Create
                create-drop : create와 같으나 종료시점에 테이블 DROP
                update : 변경분만 반영(운영DB에는 사용하면 안됨) -> alter
                validate : 엔티티와 테이블이 정상 매핑되었는지만 확인
                none : 사용하지 않음
                -> 운영장비에는 절대 create, create-drop, update 사용하면 안된다.
                -> alter -> 테이블 락걸림
            -->
            <property name="hibernate.hbm2ddl.auto" value="create-drop" />
        </properties>
    </persistence-unit>
</persistence>
